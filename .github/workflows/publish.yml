name: Publish to npm

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true
        type: string
      tag:
        description: 'NPM tag (latest, beta, alpha)'
        required: false
        default: 'latest'
        type: choice
        options:
          - latest
          - beta
          - alpha
          - next

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
      
      - name: Build package
        run: npm run build
      
      - name: Set version from input
        if: github.event_name == 'workflow_dispatch'
        run: npm version ${{ github.event.inputs.version }} --no-git-tag-version
      
      - name: Set version from release
        if: github.event_name == 'release'
        run: npm version ${GITHUB_REF#refs/tags/v} --no-git-tag-version
      
      - name: Publish to npm (manual trigger)
        if: github.event_name == 'workflow_dispatch'
        run: npm publish --tag ${{ github.event.inputs.tag }} --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Publish to npm (release)
        if: github.event_name == 'release'
        run: |
          if [[ "${{ github.event.release.prerelease }}" == "true" ]]; then
            npm publish --tag beta --access public
          else
            npm publish --tag latest --access public
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create GitHub Release Assets
        if: github.event_name == 'release'
        run: |
          npm pack
          mv saturation-js-*.tgz saturation-js.tgz
      
      - name: Upload Release Asset
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./saturation-js.tgz
          asset_name: saturation-js-${{ github.event.release.tag_name }}.tgz
          asset_content_type: application/gzip